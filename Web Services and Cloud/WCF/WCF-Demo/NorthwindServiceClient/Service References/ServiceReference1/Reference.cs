//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NorthwindClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductInfo", Namespace="http://schemas.datacontract.org/2004/07/WCF_Service")]
    [System.SerializableAttribute()]
    public partial class ProductInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.INorthwindService")]
    public interface INorthwindService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetCitiesCount", ReplyAction="http://tempuri.org/INorthwindService/GetCitiesCountResponse")]
        int GetCitiesCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetCitiesCount", ReplyAction="http://tempuri.org/INorthwindService/GetCitiesCountResponse")]
        System.Threading.Tasks.Task<int> GetCitiesCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetProductUnitPrice", ReplyAction="http://tempuri.org/INorthwindService/GetProductUnitPriceResponse")]
        System.Nullable<decimal> GetProductUnitPrice(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetProductUnitPrice", ReplyAction="http://tempuri.org/INorthwindService/GetProductUnitPriceResponse")]
        System.Threading.Tasks.Task<System.Nullable<decimal>> GetProductUnitPriceAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetProductInfo", ReplyAction="http://tempuri.org/INorthwindService/GetProductInfoResponse")]
        NorthwindClient.ServiceReference1.ProductInfo GetProductInfo(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetProductInfo", ReplyAction="http://tempuri.org/INorthwindService/GetProductInfoResponse")]
        System.Threading.Tasks.Task<NorthwindClient.ServiceReference1.ProductInfo> GetProductInfoAsync(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetDayToBgString", ReplyAction="http://tempuri.org/INorthwindService/GetDayToBgStringResponse")]
        string GetDayToBgString(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetDayToBgString", ReplyAction="http://tempuri.org/INorthwindService/GetDayToBgStringResponse")]
        System.Threading.Tasks.Task<string> GetDayToBgStringAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetSubstrCount", ReplyAction="http://tempuri.org/INorthwindService/GetSubstrCountResponse")]
        int GetSubstrCount(string content, string substring);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INorthwindService/GetSubstrCount", ReplyAction="http://tempuri.org/INorthwindService/GetSubstrCountResponse")]
        System.Threading.Tasks.Task<int> GetSubstrCountAsync(string content, string substring);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INorthwindServiceChannel : NorthwindClient.ServiceReference1.INorthwindService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NorthwindServiceClient : System.ServiceModel.ClientBase<NorthwindClient.ServiceReference1.INorthwindService>, NorthwindClient.ServiceReference1.INorthwindService {
        
        public NorthwindServiceClient() {
        }
        
        public NorthwindServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NorthwindServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NorthwindServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NorthwindServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetCitiesCount() {
            return base.Channel.GetCitiesCount();
        }
        
        public System.Threading.Tasks.Task<int> GetCitiesCountAsync() {
            return base.Channel.GetCitiesCountAsync();
        }
        
        public System.Nullable<decimal> GetProductUnitPrice(int productId) {
            return base.Channel.GetProductUnitPrice(productId);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<decimal>> GetProductUnitPriceAsync(int productId) {
            return base.Channel.GetProductUnitPriceAsync(productId);
        }
        
        public NorthwindClient.ServiceReference1.ProductInfo GetProductInfo(int productId) {
            return base.Channel.GetProductInfo(productId);
        }
        
        public System.Threading.Tasks.Task<NorthwindClient.ServiceReference1.ProductInfo> GetProductInfoAsync(int productId) {
            return base.Channel.GetProductInfoAsync(productId);
        }
        
        public string GetDayToBgString(System.DateTime date) {
            return base.Channel.GetDayToBgString(date);
        }
        
        public System.Threading.Tasks.Task<string> GetDayToBgStringAsync(System.DateTime date) {
            return base.Channel.GetDayToBgStringAsync(date);
        }
        
        public int GetSubstrCount(string content, string substring) {
            return base.Channel.GetSubstrCount(content, substring);
        }
        
        public System.Threading.Tasks.Task<int> GetSubstrCountAsync(string content, string substring) {
            return base.Channel.GetSubstrCountAsync(content, substring);
        }
    }
}
